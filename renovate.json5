{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:best-practices',
    ':rebaseStalePrs',
    'customManagers:dockerfileVersions',
  ],
  allowedPostUpgradeCommands: [
    '^./gradlew spotlessApply',
  ],
  commitBody: '\n\n{{#changelog}}\n\nChangelog:\n\n{{.}}\n\n{{/changelog}} {{releases }}',
  fetchChangeLogs: 'branch',
  packageRules: [
    {
      matchPackageNames: [
        'com.google.guava:guava',
      ],
      versioning: 'regex:^(?<major>\\d+)(\\.(?<minor>\\d+))?(\\.(?<patch>\\d+))?(-(?<compatibility>.*))?$',
      extractVersion: '^v?(?<version>.*)(-(?<compatibility>.*))?$',
      changelogUrl: 'https://github.com/google/guava',
    },
    {
      matchDepNames: [
        'semaphoreui/semaphore',
        'docker.io/semaphoreui/semaphore',
      ],
      changelogUrl: 'https://github.com/ansible-semaphore/semaphore',
    },
    {
      matchDepNames: [
        'gravitational/teleport-distroless',
        'public.ecr.aws/gravitational/teleport-distroless',
      ],
      changelogUrl: 'https://github.com/gravitational/teleport/',
    },
    {
      matchPackagePrefixes: [
        'org.junit.jupiter',
      ],
      changelogUrl: 'https://github.com/junit-team/junit5',
    },
    {
      matchPackageNames: [
        'com.github.ben-manes.versions:com.github.ben-manes.versions.gradle.plugin',
      ],
      changelogUrl: 'https://github.com/ben-manes/gradle-versions-plugin',
    },
    {
      matchPackageNames: [
        'com.diffplug.spotless:spotless-plugin-gradle',
      ],
      changelogUrl: 'https://raw.githubusercontent.com/diffplug/spotless/main/plugin-gradle/CHANGES.md',
      extractVersion: '(?<version>\\d+(?:\\.\\d+)+)',
      postUpgradeTasks: {
        commands: [
          './gradlew spotlessApply',
        ],
        fileFilters: [
          '**/*.java',
        ],
        executionMode: 'update',
      },
    },
    {
      matchPackageNames: [
        'org.asciidoctor.jvm.convert:org.asciidoctor.jvm.convert.gradle.plugin',
        'org.asciidoctor.jvm.pdf:org.asciidoctor.jvm.pdf.gradle.plugin',
      ],
      changelogUrl: 'https://github.com/asciidoctor/asciidoctor-gradle-plugin',
      extractVersion: '(?<version>\\d+(?:_|\\.\\d+)+)',
      versioning: 'regex:(?<major>\\d+)(_|\\.(?<minor>\\d+)_|\\.(?<patch>\\d+))?$',
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      matchStrings: [
        '# renovate:( datasource=(?<datasource>[^ ]+?))? depName=(?<depName>[^ ]+?)( versioning=(?<versioning>[^ ]+?))?\\s+[^"]+"(?<currentValue>[^"]+?)"',
      ],
      fileMatch: [
        '(^|/)gradle/.*\\.toml$',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
      extractVersionTemplate: '^v?(?<version>.*)$',
    },
    {
      customType: 'regex',
      fileMatch: [
        '(^|/|\\.)Dockerfile$',
        '(^|/)Dockerfile[^/]*$',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s(?:ENV|ARG) .+?_VERSION[ =]"?(?<currentValue>.+?)"?\\s',
      ],
    },
  ],
}
